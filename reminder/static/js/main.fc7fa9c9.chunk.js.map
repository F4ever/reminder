{"version":3,"sources":["utils.js","components/login.js","components/register.js","components/user-list.js","components/notification-form.js","components/notification-table.js","App.js","index.js"],"names":["processResponse","response","status","Promise","resolve","reject","json","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","Login","props","state","email","password","history","this","fetch","method","body","JSON","stringify","headers","push","window","alert","className","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","setState","target","Button","variant","onClick","login","bind","style","margin","cursor","Component","withRouter","Register","username","register","UserList","checkUser","users","userSelectedIds","then","res","id","mute","slice","index","indexOf","splice","change","map","user","display","justifyContent","key","InputGroup","Checkbox","checked","NotificationForm","notification","head","place","date","participators","close","ids","choose","saveAndClose","NotificationTable","notifications","addNotification","getNotifications","console","log","results","catch","notificationPopup","width","notify","edit","delete","closePopup","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fc7fa9c9.chunk.js","sourcesContent":["export function processResponse(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return Promise.resolve(response)\n  } else {\n    return Promise.reject(response)\n  }\n}\n\nexport function json(response) {\n    return response.json()\n}\n\nexport function getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}","import React, {Component} from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {withRouter} from \"react-router-dom\";\nimport {getCookie} from '../utils';\n\n\nclass Login extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    async login(){\n        const { history } = this.props;\n        const { email, password } = this.state;\n\n        const response = await fetch(\n            '/auth-api/login/',\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    email: email,\n                    password: password\n                }),\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8',\n                    'X-CSRFToken': getCookie('csrftoken'),\n                },\n            }\n        );\n\n        if (response.status >= 200 && response.status < 300){\n            history.push('/')\n        }else{\n            const body = await response.json();\n            window.alert(JSON.stringify(body));\n        }\n    }\n\n    render() {\n        const { history } = this.props;\n        const { email, password } = this.state;\n\n        return (\n            <div className=\"Login\">\n                <b>Login Form</b>\n                <br/>\n                <br/>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"Enter email\"\n                        value={email}\n                        onChange={(e)=>this.setState({'email': e.target.value})}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(e)=>this.setState({'password': e.target.value})}\n                    />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\" onClick={this.login.bind(this)}>\n                    Login\n                </Button>\n                <div style={{margin: '10px'}}>\n                    <a style={{cursor: 'pointer'}} onClick={() => history.push(\"/register/\")}>Register</a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Login);\n","import React, {Component} from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {withRouter} from \"react-router-dom\";\nimport {getCookie} from '../utils';\n\n\nclass Register extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n            username: '',\n        }\n    }\n\n    async register(){\n        const { history } = this.props;\n        const { email, password, username } = this.state;\n\n        const response = await fetch(\n            '/api-auth/register/',\n            {\n                method: 'POST',\n                body: JSON.stringify({\n                    email: email,\n                    password: password,\n                    username: username,\n                }),\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8',\n                    'X-CSRFToken': getCookie('csrftoken'),\n                },\n            }\n        );\n\n        if (response.status >= 200 && response.status < 300){\n            history.push('/')\n        }else{\n            const body = await response.json();\n            window.alert(JSON.stringify(body));\n        }\n    }\n\n    render() {\n        const { history } = this.props;\n        const { email, password, username } = this.state;\n\n        return (\n            <div className=\"Login\">\n                <b>Register Form</b>\n                <br/>\n                <br/>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"Enter email\"\n                        value={email}\n                        onChange={(e)=>this.setState({'email': e.target.value})}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(e)=>this.setState({'password': e.target.value})}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        placeholder=\"Enter nickname\"\n                        value={username}\n                        onChange={(e)=>this.setState({'username': e.target.value})}\n                    />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\" onClick={this.register.bind(this)}>\n                    Register\n                </Button>\n                <div style={{margin: '10px'}}>\n                    <a style={{cursor: 'pointer'}} onClick={() => history.push(\"/login/\")}>Login</a>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default withRouter(Register);\n","import React, {Component} from 'react';\nimport {Button, InputGroup} from \"react-bootstrap\";\nimport {json} from \"../utils\";\n\n\nexport default class UserList extends Component{\n    constructor(props){\n        super(props);\n\n        this.checkUser = this.checkUser.bind(this);\n\n        this.state = {\n            users: [],\n            userSelectedIds: props.users,\n        };\n\n        fetch('/api/v1/users/').then(json).then((res)=>this.setState({users: res['results']}));\n    }\n\n    checkUser(id){\n        const {userSelectedIds} = this.state;\n\n        let mute = userSelectedIds.slice();\n\n        let index = userSelectedIds.indexOf(id);\n\n        if (index > -1){\n            mute.splice(index, 1);\n        }else{\n            mute.push(id);\n        }\n\n        this.props.change(mute);\n        this.setState({userSelectedIds: mute});\n    }\n\n    render(){\n        const {users, userSelectedIds} = this.state;\n\n        return (\n            <div>\n                Select Users\n                <div>\n                    {\n                        users.map(user=>(\n                            <div style={{display: 'flex', justifyContent: 'space-between'}} key={user.id}>\n                                <InputGroup.Checkbox\n                                    checked={userSelectedIds.indexOf(user.id) !== -1}\n                                    onClick={()=>this.checkUser(user.id)}\n                                />\n                                <div>\n                                    {user.username}\n                                </div>\n                                <div>\n                                    {user.email}\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {Form, Button} from \"react-bootstrap\";\nimport UserList from \"./user-list\";\nimport {getCookie} from '../utils';\n\n\nclass NotificationForm extends Component {\n    constructor(props) {\n        super(props);\n\n        const {notification} = this.props;\n\n        if (notification){\n            this.state = {\n                id: notification.id,\n                head: notification.head,\n                body: notification.body,\n                place: notification.place,\n                date: notification.date,\n                participators: notification.participators\n            }\n        }\n        else{\n            this.state = {\n                id: null,\n                head: '',\n                body: '',\n                place: '',\n                date: '',\n                participators: []\n            }\n        }\n    }\n\n    async saveAndClose() {\n        const {close} = this.props;\n        const {\n            id,\n            head,\n            body,\n            place,\n            date,\n            participators,\n        } = this.state;\n\n        // Save\n        const response = await fetch(\n            `/api/v1/notifications/${ id ? id + '/': '' }`,\n            {\n                method: id?'PATCH':'POST',\n                body: JSON.stringify({\n                    head: head,\n                    body: body,\n                    place: place,\n                    date: date,\n                    participators: participators,\n                }),\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8',\n                    'X-CSRFToken': getCookie('csrftoken'),\n                },\n            }\n        );\n\n        if (response.status >= 200 && response.status < 300){\n            close();\n        }else{\n            const body = await response.json();\n            window.alert(JSON.stringify(body));\n        }\n    }\n\n    choose(ids){\n        this.setState({\n            participators: ids\n        })\n    }\n\n    render(){\n        const {close} = this.props;\n        const {head, body, place, date, participators} = this.state;\n\n        return (\n            <div className={'popup'}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Head</Form.Label>\n                    <Form.Control\n                        placeholder=\"Head\"\n                        value={head}\n                        onChange={(e)=>this.setState({'head': e.target.value})}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Body</Form.Label>\n                    <Form.Control\n                        placeholder=\"Body\"\n                        value={body}\n                        onChange={(e)=>this.setState({'body': e.target.value})}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Place</Form.Label>\n                    <Form.Control\n                        placeholder=\"Place\"\n                        value={place}\n                        onChange={(e)=>this.setState({'place': e.target.value})}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Date YYYY-MM-DDTHH:MM<br/>(example 2019-11-25T13:33)</Form.Label>\n                    <Form.Control\n                        placeholder=\"DateTime\"\n                        value={date}\n                        onChange={(e)=>this.setState({'date': e.target.value})}\n                    />\n                </Form.Group>\n                <br/>\n                <UserList users={participators} change={(ids)=>this.choose(ids)}/>\n                <br/>\n                <Button onClick={()=>close()}>Close</Button>\n                <br/>\n                <br/>\n                <Button onClick={()=>this.saveAndClose()}>Save</Button>\n            </div>\n        )\n    }\n}\n\n\nexport default NotificationForm;","import React, {Component} from 'react';\nimport {withRouter} from \"react-router-dom\";\nimport {json, processResponse, getCookie} from \"../utils\";\nimport Button from \"react-bootstrap/Button\";\nimport NotificationForm from \"./notification-form\";\n\n\nclass NotificationTable extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            notifications: [],\n            addNotification: false,\n            notification: {},\n        };\n\n        this.getNotifications = this.getNotifications.bind(this);\n\n        this.getNotifications();\n    }\n\n    notificationPopup(notification){\n        this.setState({\n            notification: notification,\n            addNotification: true,\n        })\n    }\n\n    closePopup(){\n        this.setState({addNotification: false});\n        this.getNotifications();\n    }\n\n    getNotifications(){\n        const { history } = this.props;\n\n        console.log('asd')\n\n        fetch('/api/v1/notifications/')\n            .then(processResponse)\n            .then(json)\n            .then((response)=>this.setState({notifications: response.results}))\n            .catch(()=>history.push('/login/'))\n    }\n\n    async delete(id){\n        const response = await fetch(\n            `/api/v1/notifications/${id}/`,\n            {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8',\n                    'X-CSRFToken': getCookie('csrftoken'),\n                },\n            }\n        );\n\n        if (response.status >= 200 && response.status < 300){\n            this.getNotifications()\n        }else{\n            const body = await response.json();\n            window.alert(JSON.stringify(body));\n        }\n    }\n\n    edit(notification){\n        this.setState({\n            notification: notification,\n            addNotification: true,\n        })\n    }\n\n    render(){\n        const {notifications, addNotification, notification} = this.state;\n\n        return (\n            <div className={\"notify-table\"}>\n                {/*<div>Notifications</div>*/}\n                <Button variant=\"primary\" style={{margin: '30px'}} onClick={()=>this.notificationPopup(null)}>Add notification</Button>\n                <table style={{width: '800px'}}>\n                    <thead>\n                    <tr>\n                        <td>\n                            head\n                        </td>\n                        <td>\n                            body\n                        </td>\n                        <td>\n                            date\n                        </td>\n                        <td>\n                            edit\n                        </td>\n                        <td>\n                            delete\n                        </td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        notifications.map((notify)=>\n                            <tr>\n                                <td>{notify.head}</td>\n                                <td>{notify.body}</td>\n                                <td>{notify.date}</td>\n                                <td onClick={()=>this.edit(notify)} style={{cursor: 'pointer'}}>Edit</td>\n                                <td onClick={()=>this.delete(notify.id)} style={{cursor: 'pointer'}}>Delete</td>\n                            </tr>\n                        )\n                    }\n                    </tbody>\n                </table>\n                {\n                    addNotification&&<NotificationForm notification={notification} close={this.closePopup.bind(this)}/>\n                }\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(NotificationTable);","import React, {Component} from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\nimport NotificationTable from \"./components/notification-table\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass App extends Component {\n\n    render(){\n        return (\n            <div className=\"App\">\n                <BrowserRouter>\n                    <Switch>\n                        <Route exact path='/' component={NotificationTable}/>\n                        <Route exact path='/login/' component={Login}/>\n                        <Route exact path='/register/' component={Register}/>\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}